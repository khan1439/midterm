---
- hosts: localhost
  become: yes

  roles:
    - role: awscli
      awscli_version: 1.16.213
    - role: docker
      docker_edition: 'ce'
      # get current docker-ce package name using "apt-cache madison docker-ce"
      docker_package: "docker-{{ docker_edition }}=5:19.03.1~3-0~ubuntu-bionic"
      docker_install_compose: true
  
  tasks:

  - name: add git apt repository
    apt_repository:
        repo: ppa:git-core/ppa

  - name: Add an apt key by id from a keyserver
    apt_key:
        keyserver: hkp://keyserver.ubuntu.com:80
        id: 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF

  - name: Update and upgrade apt packages
    apt:
      upgrade: yes
      update_cache: yes
  
  - name: install packages
    apt:
      name: [
        'apt-transport-https',
        'curl',
        'git',
        'jq',
        'supervisor',
        'python3-pip',
        'python3',
        'wget',
        'zip'
      ]
  
  - name: install any required python modules
    pip:
      name:
        - boto3==1.9.48
        - docker==3.2.0
        - docker-compose==1.24.1

  - name: configure systemd-timesyncd
    copy:
      src: /tmp/timesyncd.conf
      dest: /etc/systemd/timesyncd.conf
      owner: root
      group: root
      mode: 0644
  
  - name: restart systemd-timesyncd
    service:
      name: systemd-timesyncd
      state: restarted

  - name: increase file descriptor limit for more tcp/ip
    block:
      - pam_limits:
          domain: root
          limit_type: hard
          limit_item: nofile
          value: 65535
      - pam_limits:
          domain: root
          limit_type: soft
          limit_item: nofile
          value: 65535
      - pam_limits:
          domain: "*"
          limit_type: hard
          limit_item: nofile
          value: 65535   
      - pam_limits:
          domain: "*"
          limit_type: hard
          limit_item: nofile
          value: 65535      
  
  - name: kernel network optimization settings
    block:
      # increase tcp-time-wait buckets pool size to prevent simple DOS
      - sysctl:
          name: net.ipv4.tcp_tw_reuse
          value: "1"

      # reuse closed sockets faster
      - sysctl:
          name: net.ipv4.tcp_fin_timeout
          value: "15"

      # no tcp slow start
      - sysctl:
          name: net.ipv4.tcp_slow_start_after_idle
          value: "0"

      # increase support for number of backlogged sockets
      - sysctl:
          name: net.core.somaxconn
          value: "1000"   

      - sysctl:
          name: net.core.netdev_max_backlog
          value: "5000"  
          
      # increase amount of memory that can be consumed per socket to 16M
      - sysctl:
          name: net.core.rmem_max
          value: "16777216"

      - sysctl:
          name: net.core.wmem_max
          value: "16777216"

      # increase the number of outstanding syn requests allowed
      - sysctl:
          name: net.ipv4.tcp_max_syn_backlog
          value: "8096"

      # prevent swapping except for OOM condition (no swap on ec2 anyway)
      - sysctl:
          name: vm.swappiness
          value: "0"

      # always allow memory allocations unless there is truly no memory
      - sysctl:
          name: vm.overcommit_memory
          value: "1"

    # Drop in a daemon.json to enable tcp port
  - name: setup docker daemon
    block:
      - copy:
          src: /tmp/daemon.json
          dest: /etc/docker/daemon.json
          owner: root
          group: root
          mode: 0644
      
      - file:
          path: /etc/systemd/system/docker.service.d
          owner: root
          group: root
          mode: 0755
          state: directory

      - copy:
          src: /tmp/override.conf
          dest: /etc/systemd/system/docker.service.d/override.conf
          owner: root
          group: root
          mode: 0644

      - service:
          name: docker
          state: restarted

  - name: give ubuntu user access to docker cmds
    user:
      name: ubuntu
      append: yes
      groups: docker
  
  - name: Set memory limit in GRUB
    lineinfile: >
        dest=/etc/default/grub
        regexp=^GRUB_CMDLINE_LINUX_DEFAULT
        line='GRUB_CMDLINE_LINUX_DEFAULT="console=tty1 console=ttyS0 cgroup_enable=memory swapaccount=1"'
  
  - name: Load new GRUB config
    command: update-grub

  - name: Build dynacorp web app
    shell: |
      cd /home/ubuntu/web-app && \
      docker build -t dynaweb:latest .
  
  - name: Setup a swarm cluster
    docker_swarm:
      state: present

  - name: configure sudoers
    copy:
      src: /tmp/sudoers
      dest: /etc/sudoers
      owner: root
      group: root
      mode: 0440